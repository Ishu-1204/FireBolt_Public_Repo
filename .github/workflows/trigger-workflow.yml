name: Trigger Workflow on PR

on:
  pull_request:
    types: [opened, edited]

jobs:
  extract-inputs:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Extract Organization Username and Repository Name
        run: |
          ORG_USERNAME=$(echo "${{ github.event.pull_request.body }}" | awk -F '[][]' '/Organization Username:/ {print $2}')
          REPO_NAME=$(echo "${{ github.event.pull_request.body }}" | awk -F '[][]' '/Repository Name:/ {print $2}')
          printenv
          printf "::set-output name=org_username::%s\n" "$ORG_USERNAME"
          printf "::set-output name=repo_name::%s\n" "$REPO_NAME"
      
      - name: Trigger Another Workflow
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.TOKEN }}
          script: |
            async function triggerWorkflow() {
                const owner = context.repo.owner;
                const repo = context.repo.repo;
                const workflowId = 'Scenario_1.yml'; # Replace with your workflow ID or filename
                const ref = 'main';

                const escapedOrgUsername = encodeURIComponent('${{ steps.extract-inputs.outputs.org_username }}');
                const escapedRepoName = encodeURIComponent('${{ steps.extract-inputs.outputs.repo_name }}');
                
                const url = `https://api.github.com/repos/${owner}/${repo}/actions/workflows/${workflowId}/dispatches`;
                
                const data = {
                    ref: ref,
                    inputs: {
                        org_username: '${{ steps.extract-inputs.outputs.org_username }}',
                        repo_name: '${{ steps.extract-inputs.outputs.repo_name }}'
                    }
                };

                try {
                    const response = await github.request('POST', url, {
                        headers: {
                            'Accept': 'application/vnd.github.v3+json'
                        },
                        data: data
                    });

                    if (response.status === 204) {
                        console.log('Workflow triggered successfully!');
                    } else {
                        console.error(`Failed to trigger workflow: ${response.status}`);
                        console.error(response.data);
                    }
                } catch (error) {
                    console.error('Error triggering workflow:', error);
                }
             }
             triggerWorkflow()
