name: Lint and Unit Tests

on:
  pull_request:
    branches:
      - dev
      - main
  push:
    branches:
      - dev
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check for linting errors
        run: npm run lint > lintOutput.txt || true

      - name: Run tests
        run: npm run testCoverage || echo "TESTS_FAILED" >> testResult.txt

      - name: Determine comment based on linting and test results
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          LINT_ERRORS=$(grep -E '[1-9][0-9]*\serror' lintOutput.txt || true)
          TEST_FAILED=$(grep -q "TESTS_FAILED" testResult.txt && echo "true" || echo "false")
          if [ -n "$LINT_ERRORS" ] || [ "$TEST_FAILED" = "true" ]; then
            echo "Some checks failed. Here are the details:" > comment.txt
            if [ -n "$LINT_ERRORS" ]; then
              echo "Linting failed with the following errors:" >> comment.txt
              echo "\`\`\`" >> comment.txt
              cat lintOutput.txt >> comment.txt
              echo "\`\`\`" >> comment.txt
              echo "For more information on our linting policies, please see our [Linting-Guide](../tree/dev/Linting-Guide.md)." >> comment.txt
            fi
            if [ "$TEST_FAILED" = "true" ]; then
              echo "Unit tests failed." >> comment.txt
            fi
            echo "comment=$(cat comment.txt)" >> $GITHUB_ENV
          else
            echo "comment=Linting and unit tests succeeded" >> $GITHUB_ENV
          fi

      - name: Comment on PR
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [[ "${{ github.event_name }}" == 'pull_request' ]]; then
            echo "${{ env.comment }}"
            curl -X POST \
              -H "Authorization: Bearer $GITHUB_TOKEN" \
              -d '{"body": "${{ env.comment }}"}' \
              "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments"
          fi
