name: Lint and Unit Tests

on:
  pull_request:
    branches:
      - dev
      - main
  push:
    branches:
      - dev
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check for linting errors
        run: npm run lint > lint-errors.txt || echo "Lint errors detected."

      - name: Fail if lint errors are found
        run: |
          if [ -s lint-errors.txt ]; then
            echo "Linting failed, errors are present."
            exit 1
          fi

      - name: Run tests
        run: npm run testCoverage

      - name: Set failure comment if failed for PRs
        if: ${{ failure() && github.event_name == 'pull_request' }}
        run: echo "comment=Linting or unit tests failed" >> $GITHUB_ENV

      - name: Set success comment
        if: ${{ success() }}
        run: echo "comment=Linting and unit tests succeeded" >> $GITHUB_ENV

      - name: Comment on PR with lint errors
        if: always() && github.event_name == 'pull_request'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          lint_errors=$(<lint-errors.txt)
          if [ -n "$lint_errors" ]; then
            comment_body="Linting errors found:\n\`\`\`\n$lint_errors\n\`\`\`"
          else
            comment_body="${{ env.comment }}"
          fi
          curl -X POST \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -d "{\"body\": \"$comment_body\"}" \
            "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments"
