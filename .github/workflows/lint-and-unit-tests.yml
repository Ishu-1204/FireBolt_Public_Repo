name: Lint and Unit Tests

on:
  pull_request:
    branches:
      - dev
      - main
  push:
    branches:
      - dev
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check for linting errors
        run: npm run lint > lintOutput.txt || true

      - name: Run tests
        run: npm run testCoverage || echo "TESTS_FAILED" >> testResult.txt

      - name: Determine comment based on linting and test results
        id: comment
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          LINT_ERRORS=""
          if [ -f lintOutput.txt ]; then
              LINT_ERRORS=$(grep -E '[1-9][0-9]*\serror' lintOutput.txt || true)
          fi
          TEST_FAILED=false
          if [ -f testResult.txt ]; then
              TEST_FAILED=$(grep -q "TESTS_FAILED" testResult.txt && echo "true" || echo "false")
          fi
          COMMENT="Linting and unit tests succeeded"
          if [ -n "$LINT_ERRORS" ] || [ "$TEST_FAILED" = "true" ]; then
            COMMENT="Checks failed. Here are the details:\n"
            if [ -n "$LINT_ERRORS" ]; then
              COMMENT+="Linting failed with the following errors:\n\`\`\`\n$(cat lintOutput.txt)\n\`\`\`\nFor more information on our linting policies, please see our [Linting-Guide](../tree/dev/Linting-Guide.md).\n"
            fi
            if [ "$TEST_FAILED" = "true" ]; then
              COMMENT+="Unit tests failed.\n"
            fi
          fi
          echo "::set-output name=pr_comment::$COMMENT"

      - name: Fail if linting errors or unit tests failed
        if: steps.comment.outputs.pr_comment != 'Linting and unit tests succeeded'
        run: exit 1

      - name: Comment on PR
        if: always()
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          PR_COMMENT="${{ steps.comment.outputs.pr_comment }}"
          PR_COMMENT="${PR_COMMENT//'%'/'%25'}"
          PR_COMMENT="${PR_COMMENT//$'\n'/'%0A'}"
          PR_COMMENT="${PR_COMMENT//$'\r'/'%0D'}"
          if [[ "${{ github.event_name }}" == 'pull_request' ]]; then
            echo "$PR_COMMENT"
            curl -X POST \
              -H "Authorization: Bearer $GITHUB_TOKEN" \
              -d "{\"body\": \"$PR_COMMENT\"}" \
              "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments"
          fi

